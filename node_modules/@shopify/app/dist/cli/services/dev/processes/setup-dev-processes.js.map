{"version":3,"file":"setup-dev-processes.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/processes/setup-dev-processes.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseProcess, DevProcessFunction} from './types.js'\nimport {PreviewThemeAppExtensionsProcess, setupPreviewThemeAppExtensionsProcess} from './theme-app-extension.js'\nimport {PreviewableExtensionProcess, setupPreviewableExtensionsProcess} from './previewable-extension.js'\nimport {DraftableExtensionProcess, setupDraftableExtensionsProcess} from './draftable-extension.js'\nimport {SendWebhookProcess, setupSendUninstallWebhookProcess} from './uninstall-webhook.js'\nimport {WebProcess, setupWebProcesses} from './web.js'\nimport {AppInterface, getAppScopes} from '../../../models/app/app.js'\n\nimport {OrganizationApp} from '../../../models/organization.js'\nimport {DevOptions} from '../../dev.js'\nimport {getProxyingWebServer} from '../../../utilities/app/http-reverse-proxy.js'\nimport {buildAppURLForWeb} from '../../../utilities/app/app-url.js'\nimport {PartnersURLs} from '../urls.js'\nimport {getAvailableTCPPort} from '@shopify/cli-kit/node/tcp'\n\nexport interface ProxyServerProcess extends BaseProcess<{port: number; rules: {[key: string]: string}}> {\n  type: 'proxy-server'\n}\n\ntype DevProcessDefinition =\n  | SendWebhookProcess\n  | PreviewThemeAppExtensionsProcess\n  | WebProcess\n  | ProxyServerProcess\n  | PreviewableExtensionProcess\n  | DraftableExtensionProcess\n\nexport type DevProcesses = DevProcessDefinition[]\n\ninterface DevNetworkOptions {\n  proxyPort: number\n  proxyUrl: string\n  frontendPort: number\n  backendPort: number\n  currentUrls: PartnersURLs\n}\n\nexport interface DevConfig {\n  localApp: AppInterface\n  remoteAppUpdated: boolean\n  remoteApp: Omit<OrganizationApp, 'apiSecretKeys'> & {\n    apiSecret?: string | undefined\n  }\n  token: string\n  storeFqdn: string\n  commandOptions: DevOptions\n  network: DevNetworkOptions\n  partnerUrlsUpdated: boolean\n  usesUnifiedDeployment: boolean\n}\n\nexport async function setupDevProcesses({\n  localApp,\n  remoteAppUpdated,\n  token,\n  remoteApp,\n  storeFqdn,\n  commandOptions,\n  network,\n  usesUnifiedDeployment,\n}: Omit<DevConfig, 'partnerUrlsUpdated'>): Promise<{processes: DevProcesses; previewUrl: string}> {\n  const apiKey = remoteApp.apiKey\n  const apiSecret = (remoteApp.apiSecret as string) ?? ''\n\n  const processes = [\n    ...(await setupWebProcesses({\n      webs: localApp.webs,\n      proxyUrl: network.proxyUrl,\n      frontendPort: network.frontendPort,\n      backendPort: network.backendPort,\n      apiKey,\n      apiSecret,\n      scopes: getAppScopes(localApp.configuration),\n    })),\n    await setupPreviewableExtensionsProcess({\n      allExtensions: localApp.allExtensions,\n      storeFqdn,\n      apiKey,\n      subscriptionProductUrl: commandOptions.subscriptionProductUrl,\n      checkoutCartUrl: commandOptions.checkoutCartUrl,\n      proxyUrl: network.proxyUrl,\n      appName: localApp.name,\n      appDotEnvFile: localApp.dotenv,\n      grantedScopes: remoteApp.grantedScopes,\n      appId: remoteApp.id,\n      appDirectory: localApp.directory,\n    }),\n    await setupDraftableExtensionsProcess({\n      localApp,\n      remoteApp,\n      apiKey,\n      token,\n      proxyUrl: network.proxyUrl,\n      unifiedDeployment: usesUnifiedDeployment,\n    }),\n    await setupPreviewThemeAppExtensionsProcess({\n      allExtensions: localApp.allExtensions,\n      storeFqdn,\n      apiKey,\n      token,\n      theme: commandOptions.theme,\n      themeExtensionPort: commandOptions.themeExtensionPort,\n      notify: commandOptions.notify,\n      usesUnifiedDeployment,\n    }),\n    setupSendUninstallWebhookProcess({\n      webs: localApp.webs,\n      backendPort: network.backendPort,\n      frontendPort: network.frontendPort,\n      token,\n      storeFqdn,\n      apiSecret,\n      remoteAppUpdated,\n    }),\n  ].filter(stripUndefineds)\n\n  // Add http server proxy & configure ports, for processes that need it\n  const processesWithProxy = await setPortsAndAddProxyProcess(processes, network.proxyPort)\n\n  // Decide on the appropriate preview URL for a session with these processes\n  const anyPreviewableExtensions = processesWithProxy.filter((process) => process.type === 'previewable-extension')\n  const previewUrl =\n    anyPreviewableExtensions.length > 0\n      ? `${network.proxyUrl}/extensions/dev-console`\n      : buildAppURLForWeb(storeFqdn, apiKey)\n\n  return {processes: processesWithProxy, previewUrl}\n}\n\nconst stripUndefineds = <T>(process: T | undefined | false): process is T => {\n  return process !== undefined && process !== false\n}\n\nasync function setPortsAndAddProxyProcess(processes: DevProcesses, proxyPort: number): Promise<DevProcesses> {\n  // Convert processes that use proxying to have a port number and register their mapping rules\n  const processesAndRules = await Promise.all(\n    processes.map(async (process) => {\n      const rules: {[key: string]: string} = {}\n\n      if (process.type === 'web') {\n        const targetPort = process.options.portFromConfig || process.options.port\n        rules.default = `http://localhost:${targetPort}`\n        const hmrServer = process.options.hmrServerOptions\n        if (hmrServer) {\n          rules.websocket = `http://localhost:${hmrServer.port}`\n          hmrServer.httpPaths.forEach((path) => (rules[path] = `http://localhost:${hmrServer.port}`))\n        }\n        process.options.port = targetPort\n      } else if (process.type === 'previewable-extension') {\n        const targetPort = await getAvailableTCPPort()\n        rules[process.options.pathPrefix] = `http://localhost:${targetPort}`\n        process.options.port = targetPort\n      }\n\n      return {process, rules}\n    }),\n  )\n\n  const newProcesses = processesAndRules.map(({process}) => process)\n  const allRules = processesAndRules.map(({rules}) => rules).reduce((acc, rules) => ({...acc, ...rules}), {})\n\n  if (Object.keys(allRules).length > 0) {\n    newProcesses.push({\n      type: 'proxy-server',\n      prefix: 'proxy',\n      function: startProxyServer,\n      options: {\n        port: proxyPort,\n        rules: allRules,\n      },\n    })\n  }\n\n  return newProcesses\n}\n\nexport const startProxyServer: DevProcessFunction<{port: number; rules: {[key: string]: string}}> = async (\n  {abortSignal},\n  {port, rules},\n) => {\n  const {server} = await getProxyingWebServer(rules, abortSignal)\n  await server.listen(port)\n}\n"]}