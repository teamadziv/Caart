{"version":3,"file":"draftable-extension.js","sourceRoot":"","sources":["../../../../../src/cli/services/dev/processes/draftable-extension.ts"],"names":[],"mappings":"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","sourcesContent":["import {BaseProcess, DevProcessFunction} from './types.js'\nimport {updateExtensionDraft} from '../update-extension.js'\nimport {setupConfigWatcher, setupDraftableExtensionBundler, setupFunctionWatcher} from '../extension/bundler.js'\nimport {ExtensionInstance} from '../../../models/extensions/extension-instance.js'\nimport {AppInterface} from '../../../models/app/app.js'\nimport {PartnersAppForIdentifierMatching, ensureDeploymentIdsPresence} from '../../context/identifiers.js'\nimport {getAppIdentifiers} from '../../../models/app/identifiers.js'\nimport {AbortError} from '@shopify/cli-kit/node/error'\n\nexport interface DraftableExtensionOptions {\n  extensions: ExtensionInstance[]\n  token: string\n  apiKey: string\n  unifiedDeployment: boolean\n  remoteExtensionIds: {[key: string]: string}\n  proxyUrl: string\n  localApp: AppInterface\n}\n\nexport interface DraftableExtensionProcess extends BaseProcess<DraftableExtensionOptions> {\n  type: 'draftable-extension'\n}\n\nexport const pushUpdatesForDraftableExtensions: DevProcessFunction<DraftableExtensionOptions> = async (\n  {stderr, stdout, abortSignal: signal},\n  {extensions, token, apiKey, unifiedDeployment, remoteExtensionIds: remoteExtensions, proxyUrl, localApp: app},\n) => {\n  // Functions will only be passed to this target if unified deployments are enabled\n  // ESBuild will take care of triggering an initial build & upload for the extensions with ESBUILD feature.\n  // For the rest we need to manually upload an initial draft.\n  const initialDraftExtensions = extensions.filter((ext) => !ext.isESBuildExtension)\n  await Promise.all(\n    initialDraftExtensions.map(async (extension) => {\n      await extension.build({app, stdout, stderr, useTasks: false, signal})\n      const registrationId = remoteExtensions[extension.localIdentifier]\n      if (!registrationId) throw new AbortError(`Extension ${extension.localIdentifier} not found on remote app.`)\n      await updateExtensionDraft({extension, token, apiKey, registrationId, stdout, stderr, unifiedDeployment})\n    }),\n  )\n\n  await Promise.all(\n    extensions\n      .map((extension) => {\n        const registrationId = remoteExtensions[extension.localIdentifier]\n        if (!registrationId) throw new AbortError(`Extension ${extension.localIdentifier} not found on remote app.`)\n\n        const actions = [\n          setupConfigWatcher({\n            extension,\n            token,\n            apiKey,\n            registrationId,\n            stdout,\n            stderr,\n            signal,\n            unifiedDeployment,\n          }),\n        ]\n\n        // Only extensions with esbuild feature should be watched using esbuild\n        if (extension.features.includes('esbuild')) {\n          actions.push(\n            setupDraftableExtensionBundler({\n              extension,\n              app,\n              url: proxyUrl,\n              token,\n              apiKey,\n              registrationId,\n              stderr,\n              stdout,\n              signal,\n              unifiedDeployment,\n            }),\n          )\n        }\n\n        // watch for function changes that require a build and push\n        if (extension.isFunctionExtension) {\n          actions.push(\n            setupFunctionWatcher({\n              extension,\n              app,\n              stdout,\n              stderr,\n              signal,\n              token,\n              apiKey,\n              registrationId,\n              unifiedDeployment,\n            }),\n          )\n        }\n\n        return actions\n      })\n      .flat(),\n  )\n}\n\nexport async function setupDraftableExtensionsProcess({\n  unifiedDeployment,\n  localApp,\n  apiKey,\n  token,\n  remoteApp,\n  ...options\n}: Omit<DraftableExtensionOptions, 'remoteExtensionIds' | 'extensions'> & {\n  remoteApp: PartnersAppForIdentifierMatching\n}): Promise<DraftableExtensionProcess | undefined> {\n  // it would be good if this process didn't require the full local & remote app instances\n  const allExtensions = localApp.allExtensions\n  const draftableExtensions = allExtensions.filter((ext) => ext.isDraftable(unifiedDeployment))\n  if (draftableExtensions.length === 0) {\n    return\n  }\n  const deploymentMode = unifiedDeployment ? 'unified' : 'legacy'\n  const prodEnvIdentifiers = getAppIdentifiers({app: localApp})\n\n  const {extensionIds: remoteExtensionIds} = await ensureDeploymentIdsPresence({\n    app: localApp,\n    partnersApp: remoteApp,\n    appId: apiKey,\n    appName: remoteApp.title,\n    force: true,\n    deploymentMode,\n    token,\n    envIdentifiers: prodEnvIdentifiers,\n  })\n\n  return {\n    type: 'draftable-extension',\n    prefix: 'extensions',\n    function: pushUpdatesForDraftableExtensions,\n    options: {\n      unifiedDeployment,\n      localApp,\n      apiKey,\n      token,\n      ...options,\n      extensions: draftableExtensions,\n      remoteExtensionIds,\n    },\n  }\n}\n"]}