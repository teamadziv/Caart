{"version":3,"file":"schemas.js","sourceRoot":"","sources":["../../../../src/cli/models/extensions/schemas.ts"],"names":[],"mappings":"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","sourcesContent":["import {schema} from '@shopify/cli-kit/node/schema'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type ZodSchemaType<T> = schema.ZodType<T, any, any>\n\nexport const MetafieldSchema = schema.object({\n  namespace: schema.string(),\n  key: schema.string(),\n})\n\nexport const CapabilitiesSchema = schema.object({\n  network_access: schema.boolean().optional(),\n  block_progress: schema.boolean().optional(),\n  api_access: schema.boolean().optional(),\n})\n\nexport const TypeSchema = schema.object({\n  type: schema.string().default('ui_extension'),\n})\n\nexport const NewExtensionPointSchema = schema.object({\n  target: schema.string(),\n  module: schema.string(),\n  metafields: schema.array(MetafieldSchema).optional(),\n})\n\nexport const OldExtensionPointsSchema = schema.array(schema.string()).default([])\nexport const NewExtensionPointsSchema = schema.array(NewExtensionPointSchema)\nexport const ExtensionPointSchema = schema.union([OldExtensionPointsSchema, NewExtensionPointsSchema])\nexport const ApiVersionSchema = schema.string()\n\nexport type ApiVersionSchemaType = schema.infer<typeof ApiVersionSchema>\n\nexport const BaseUIExtensionSchema = schema.object({\n  name: schema.string(),\n  description: schema.string().optional(),\n  type: schema.string().default('ui_extension'),\n  apiVersion: ApiVersionSchema.optional(),\n  extensionPoints: schema.any().optional(),\n  capabilities: CapabilitiesSchema.optional(),\n  metafields: schema.array(MetafieldSchema).optional().default([]),\n  categories: schema.array(schema.string()).optional(),\n})\n\nexport const ThemeExtensionSchema = schema.object({\n  name: schema.string(),\n  type: schema.literal('theme'),\n})\n\nexport const BaseFunctionConfigurationSchema = schema.object({\n  name: schema.string(),\n  type: schema.string(),\n  description: schema.string().optional().default(''),\n  build: schema.object({\n    command: schema\n      .string()\n      .transform((value) => (value.trim() === '' ? undefined : value))\n      .optional(),\n    path: schema.string().optional(),\n  }),\n  configurationUi: schema.boolean().optional().default(true),\n  ui: schema\n    .object({\n      enable_create: schema.boolean().optional(),\n      paths: schema\n        .object({\n          create: schema.string(),\n          details: schema.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n  apiVersion: schema.string(),\n  input: schema\n    .object({\n      variables: schema\n        .object({\n          namespace: schema.string(),\n          key: schema.string(),\n        })\n        .optional(),\n    })\n    .optional(),\n})\n\nexport type NewExtensionPointSchemaType = schema.infer<typeof NewExtensionPointSchema>\n\n// Base config type that all config schemas must extend.\nexport type BaseConfigContents = schema.infer<typeof BaseUIExtensionSchema>\n"]}