{"version":3,"file":"bundle.js","sourceRoot":"","sources":["../../../../src/cli/models/app/bundle.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,8BAA8B,CAAA;AAEnD,MAAM,CAAC,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC;IACnD,yBAAyB;IACzB,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE;IACnB,kDAAkD;IAClD,UAAU,EAAE,MAAM,CAAC,MAAM,EAAE;CAC5B,CAAC,CAAA;AAIF,MAAM,CAAC,MAAM,0BAA0B,GAAG,MAAM,CAAC,MAAM,CAAC;IACtD,yBAAyB;IACzB,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE;IACnB,gEAAgE;IAChE,SAAS,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;CACzC,CAAC,CAAA;AAIF,MAAM,CAAC,MAAM,6BAA6B,GAAG,MAAM,CAAC,MAAM,CAAC;IACzD,yBAAyB;IACzB,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE;IACnB,kDAAkD;IAClD,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE;CAC1B,CAAC,CAAA;AAIF,MAAM,CAAC,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;IACxC,8BAA8B;IAC9B,EAAE,EAAE,MAAM,CAAC,MAAM,EAAE;IACnB,+DAA+D;IAC/D,UAAU,EAAE,MAAM,CAAC,MAAM,CAAC;QACxB,oBAAoB;QACpB,EAAE,EAAE,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC;QACzC,uBAAuB;QACvB,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC;QAC/C,0BAA0B;QAC1B,QAAQ,EAAE,MAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC;KACtD,CAAC;CACH,CAAC,CAAA","sourcesContent":["import {schema} from '@shopify/cli-kit/node/schema'\n\nexport const BundleUIExtensionSchema = schema.object({\n  /** The extension UUID */\n  id: schema.string(),\n  /** The relative path to the Javascript bundle. */\n  bundlePath: schema.string(),\n})\n\nexport type BundleUIExtension = schema.infer<typeof BundleUIExtensionSchema>\n\nexport const BundleThemeExtensionSchema = schema.object({\n  /** The extension UUID */\n  id: schema.string(),\n  /** A list of paths to the files that are part of the schema. */\n  filePaths: schema.array(schema.string()),\n})\n\nexport type BundleThemeExtension = schema.infer<typeof BundleThemeExtensionSchema>\n\nexport const BundleFunctionExtensionSchema = schema.object({\n  /** The extension UUID */\n  id: schema.string(),\n  /** The path to the .wasm file of the function. */\n  wasmPath: schema.string(),\n})\n\nexport type BundleFunctionExtension = schema.infer<typeof BundleFunctionExtensionSchema>\n\nexport const BundleSchema = schema.object({\n  /** The application API key */\n  id: schema.string(),\n  /** The collection of extensions that are part of the bundle */\n  extensions: schema.object({\n    /** UI extensions */\n    ui: schema.array(BundleUIExtensionSchema),\n    /** Theme extensions */\n    theme: schema.array(BundleThemeExtensionSchema),\n    /** Function extensions */\n    function: schema.array(BundleFunctionExtensionSchema),\n  }),\n})\n\nexport type Bundle = schema.infer<typeof BundleSchema>\n"]}