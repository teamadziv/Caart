{"version":3,"file":"use-layout.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/hooks/use-layout.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAC,MAAM,KAAK,CAAA;AAE7B,MAAM,SAAS,GAAG,EAAE,CAAA;AAQpB,MAAM,CAAC,OAAO,UAAU,SAAS;IAC/B,MAAM,EAAC,MAAM,EAAC,GAAG,SAAS,EAAE,CAAA;IAE5B,MAAM,SAAS,GAAG,MAAM,EAAE,OAAO,IAAI,SAAS,CAAA;IAC9C,IAAI,QAAQ,CAAA;IACZ,IAAI,SAAS,CAAA;IAEb,IAAI,SAAS,IAAI,SAAS,EAAE;QAC1B,QAAQ,GAAG,SAAS,CAAA;QACpB,SAAS,GAAG,SAAS,CAAA;KACtB;SAAM;QACL,QAAQ,GAAG,MAAM,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAC,CAAC,CAAA;QACrE,SAAS,GAAG,MAAM,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAC,CAAC,CAAA;KACvE;IAED,OAAO;QACL,SAAS;QACT,QAAQ;QACR,SAAS;KACV,CAAA;AACH,CAAC;AAED,SAAS,MAAM,CAAC,EACd,SAAS,EACT,QAAQ,EACR,QAAQ,GAKT;IACC,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;IAE3E,IAAI,eAAe,GAAG,QAAQ,EAAE;QAC9B,OAAO,QAAQ,CAAA;KAChB;SAAM;QACL,OAAO,eAAe,CAAA;KACvB;AACH,CAAC","sourcesContent":["import {useStdout} from 'ink'\n\nconst MIN_WIDTH = 80\n\ninterface Layout {\n  twoThirds: number\n  oneThird: number\n  fullWidth: number\n}\n\nexport default function useLayout(): Layout {\n  const {stdout} = useStdout()\n\n  const fullWidth = stdout?.columns ?? MIN_WIDTH\n  let oneThird\n  let twoThirds\n\n  if (fullWidth <= MIN_WIDTH) {\n    oneThird = fullWidth\n    twoThirds = fullWidth\n  } else {\n    oneThird = column({fullWidth, fraction: [1, 3], minWidth: MIN_WIDTH})\n    twoThirds = column({fullWidth, fraction: [2, 3], minWidth: MIN_WIDTH})\n  }\n\n  return {\n    twoThirds,\n    oneThird,\n    fullWidth,\n  }\n}\n\nfunction column({\n  fullWidth,\n  fraction,\n  minWidth,\n}: {\n  fullWidth: number\n  fraction: [number, number]\n  minWidth: number\n}): number {\n  const fractionedWidth = Math.floor((fullWidth / fraction[1]) * fraction[0])\n\n  if (fractionedWidth < minWidth) {\n    return minWidth\n  } else {\n    return fractionedWidth\n  }\n}\n"]}