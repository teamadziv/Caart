{"version":3,"file":"ui.js","sourceRoot":"","sources":["../../../src/public/node/ui.tsx"],"names":[],"mappings":"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","sourcesContent":["import {AbortSilentError, FatalError as Fatal} from './error.js'\nimport {collectLog, consoleError, consoleLog, Logger, LogLevel, outputDebug, outputWhereAppropriate} from './output.js'\nimport {isUnitTest} from './context/local.js'\nimport {ConcurrentOutput, ConcurrentOutputProps} from '../../private/node/ui/components/ConcurrentOutput.js'\nimport {render, renderOnce} from '../../private/node/ui.js'\nimport {alert} from '../../private/node/ui/alert.js'\nimport {AlertProps, CustomSection} from '../../private/node/ui/components/Alert.js'\nimport {FatalError} from '../../private/node/ui/components/FatalError.js'\nimport ScalarDict from '../../private/node/ui/components/Table/ScalarDict.js'\nimport {Table, TableColumn, TableProps} from '../../private/node/ui/components/Table/Table.js'\nimport {SelectPrompt, SelectPromptProps} from '../../private/node/ui/components/SelectPrompt.js'\nimport {Tasks, Task} from '../../private/node/ui/components/Tasks.js'\nimport {TextPrompt, TextPromptProps} from '../../private/node/ui/components/TextPrompt.js'\nimport {AutocompletePromptProps, AutocompletePrompt} from '../../private/node/ui/components/AutocompletePrompt.js'\nimport {InlineToken, LinkToken, TokenItem} from '../../private/node/ui/components/TokenizedText.js'\nimport React from 'react'\nimport {Key as InkKey, RenderOptions} from 'ink'\nimport {AbortController} from '@shopify/cli-kit/node/abort'\n\ntype PartialBy<T, TKey extends keyof T> = Omit<T, TKey> & Partial<Pick<T, TKey>>\n\nexport interface RenderConcurrentOptions extends PartialBy<ConcurrentOutputProps, 'abortController'> {\n  renderOptions?: RenderOptions\n}\n\n/**\n * Renders output from concurrent processes to the terminal with {@link ConcurrentOutput}.\n */\nexport async function renderConcurrent({renderOptions = {}, ...props}: RenderConcurrentOptions) {\n  const newProps = {\n    abortController: new AbortController(),\n    ...props,\n  }\n\n  return render(<ConcurrentOutput {...newProps} />, {\n    ...renderOptions,\n    exitOnCtrlC: typeof props.onInput === 'undefined',\n  })\n}\n\nexport type AlertCustomSection = CustomSection\nexport type RenderAlertOptions = Omit<AlertProps, 'type'>\n\n/**\n * Renders an information banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ info ───────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                            │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderInfo(options: RenderAlertOptions) {\n  return alert({...options, type: 'info'})\n}\n\n/**\n * Renders a success banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ success ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                              │\n * │    • To preview your project, run `npm app dev`            │\n * │    • To add extensions, run `npm generate extension`       │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                                │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderSuccess(options: RenderAlertOptions) {\n  return alert({...options, type: 'success'})\n}\n\n/**\n * Renders a warning banner to the console.\n *\n * Basic:\n *\n * ```\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n *\n * Complete:\n * ```\n * ╭─ warning ────────────────────────────────────────────────╮\n * │                                                          │\n * │  Title                                                   │\n * │                                                          │\n * │  Body                                                    │\n * │                                                          │\n * │  Next steps                                              │\n * │    • Run `cd santorini-goods`                            │\n * │    • To preview your project, run `npm app dev`          │\n * │    • To add extensions, run `npm generate extension`     │\n * │                                                          │\n * │  Reference                                               │\n * │    • Run `npm shopify help`                              │\n * │    • Press 'return' to open the dev docs:                │\n * │      https://shopify.dev                                 │\n * │                                                          │\n * │  Link: https://shopify.com                               │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderWarning(options: RenderAlertOptions) {\n  return alert({...options, type: 'warning'})\n}\n\n/**\n * Renders a Fatal error to the console inside a banner.\n *\n * ```\n * ╭─ error ──────────────────────────────────────────────────╮\n * │                                                          │\n * │  Couldn't connect to the Shopify Partner Dashboard.      │\n * │                                                          │\n * │  Check your internet connection and try again.           │\n * │                                                          │\n * ╰──────────────────────────────────────────────────────────╯\n * ```\n */\nexport function renderFatalError(error: Fatal) {\n  return renderOnce(<FatalError error={error} />, 'error', consoleError)\n}\n\n/**\n * Renders a select prompt to the console.\n *\n * ```\n * ?  Associate your project with the org Castile Ventures?\n *\n *      Add:     • new-ext\n *\n *      Remove:  • integrated-demand-ext\n *               • order-discount\n *\n * \\>  (f) first\n *     (s) second\n *     (3) third\n *     (4) fourth\n *     (5) seventh\n *     (6) tenth\n *\n *     Automations\n *     (7) fifth\n *     (8) sixth\n *\n *     Merchant Admin\n *     (9) eighth\n *     (10) ninth\n *\n *     Press ↑↓ arrows to select, enter to confirm\n * ```\n */\nexport function renderSelectPrompt<T>(props: Omit<SelectPromptProps<T>, 'onSubmit'>): Promise<T> {\n  // eslint-disable-next-line max-params\n  return new Promise((resolve, reject) => {\n    render(<SelectPrompt {...props} onSubmit={(value: T) => resolve(value)} />, {\n      exitOnCtrlC: false,\n    }).catch(reject)\n  })\n}\n\nexport interface RenderConfirmationPromptOptions extends Pick<SelectPromptProps<boolean>, 'message' | 'infoTable'> {\n  confirmationMessage?: string\n  cancellationMessage?: string\n}\n\n/**\n * Renders a confirmation prompt to the console.\n *\n * ?  Do you want to continue?\n *\n * \\>  (y) Yes, confirm\n *     (n) No, canccel\n *\n *     Press ↑↓ arrows to select, enter to confirm\n */\nexport function renderConfirmationPrompt({\n  message,\n  infoTable,\n  confirmationMessage = 'Yes, confirm',\n  cancellationMessage = 'No, cancel',\n}: RenderConfirmationPromptOptions): Promise<boolean> {\n  const choices = [\n    {\n      label: confirmationMessage,\n      value: true,\n      key: 'y',\n    },\n    {\n      label: cancellationMessage,\n      value: false,\n      key: 'n',\n    },\n  ]\n\n  return renderSelectPrompt({\n    choices,\n    message,\n    infoTable,\n    submitWithShortcuts: true,\n  })\n}\n\n/**\n * Renders an autocomplete prompt to the console.\n * ```\n * ?  Select a template  Type to search...\n\n * \\>  first\n *     second\n *     third\n\n *  Press ↑↓ arrows to select, enter to confirm\n * ```\n */\nexport function renderAutocompletePrompt<T>(\n  props: PartialBy<Omit<AutocompletePromptProps<T>, 'onSubmit'>, 'search'>,\n): Promise<T> {\n  const newProps = {\n    search(term: string) {\n      return Promise.resolve({\n        data: props.choices.filter((item) => item.label.toLowerCase().includes(term.toLowerCase())),\n      })\n    },\n    ...props,\n  }\n\n  // eslint-disable-next-line max-params\n  return new Promise((resolve, reject) => {\n    render(<AutocompletePrompt {...newProps} onSubmit={(value: T) => resolve(value)} />, {\n      exitOnCtrlC: false,\n    }).catch(reject)\n  })\n}\n\n/**\n * Renders a table to the console.\n *\n * ```\n * name                      role           Identifier\n * ────────────────────────  ─────────────  ──────────\n * Dawn                      [live]         #1361\n * Studio                                   #1363\n * Debut                     [unpublished]  #1374\n * Development (1a23b4-MBP)  [development]  #1368\n * ```\n */\nexport function renderTable<T extends ScalarDict>(props: TableProps<T>) {\n  return renderOnce(<Table {...props} />)\n}\n\n/**\n * Runs async tasks and displays their progress to the console.\n */\nexport async function renderTasks<TContext>(tasks: Task<TContext>[]) {\n  return render(<Tasks tasks={tasks} />)\n}\n\n/**\n * Renders a text prompt to the console.\n * ```\n * ?  What is your name?\n * \\>  John\n * ```\n */\nexport function renderTextPrompt(props: Omit<TextPromptProps, 'onSubmit'>): Promise<string> {\n  // eslint-disable-next-line max-params\n  return new Promise((resolve, reject) => {\n    render(<TextPrompt {...props} onSubmit={(value: string) => resolve(value)} />, {\n      exitOnCtrlC: false,\n    }).catch(reject)\n  })\n}\n\ninterface RenderTextOptions {\n  text: string\n  logLevel?: LogLevel\n  logger?: Logger\n}\n\n/** Renders a text string to the console.\n * Using this function makes sure that correct spacing is applied among the various components. */\nexport function renderText({text, logLevel = 'info', logger = consoleLog}: RenderTextOptions) {\n  let textWithLineReturn = text\n  if (!text.endsWith('\\n')) textWithLineReturn += '\\n'\n\n  if (isUnitTest()) collectLog(logLevel, textWithLineReturn)\n  outputWhereAppropriate(logLevel, logger, textWithLineReturn)\n}\n\n/** Waits for any key to be pressed except Ctrl+C which will terminate the process. */\nexport const keypress = async () => {\n  // eslint-disable-next-line max-params\n  return new Promise((resolve, reject) => {\n    const handler = (buffer: Buffer) => {\n      process.stdin.setRawMode(false)\n      process.stdin.pause()\n\n      const bytes = Array.from(buffer)\n\n      if (bytes.length && bytes[0] === 3) {\n        outputDebug('Canceled keypress, User pressed CTRL+C')\n        reject(new AbortSilentError())\n      }\n      process.nextTick(resolve)\n    }\n\n    process.stdin.resume()\n    process.stdin.setRawMode(true)\n    process.stdin.once('data', handler)\n  })\n}\n\nexport type Key = InkKey\nexport {Task, TokenItem, InlineToken, LinkToken, TableColumn}\n"]}