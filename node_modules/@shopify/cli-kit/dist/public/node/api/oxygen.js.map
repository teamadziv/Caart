{"version":3,"file":"oxygen.js","sourceRoot":"","sources":["../../../../src/public/node/api/oxygen.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,YAAY,EAAC,MAAM,YAAY,CAAA;AACvC,OAAO,EAAC,cAAc,EAAmB,MAAM,sCAAsC,CAAA;AACrF,OAAO,EAAC,YAAY,EAAC,MAAM,sCAAsC,CAAA;AAIjE;;;;;;;;GAQG;AACH,MAAM,CAAC,KAAK,UAAU,aAAa,CACjC,aAAqB,EACrB,KAAa,EACb,KAAa,EACb,SAA4B;IAE5B,OAAO,cAAc,CAAC,KAAK,EAAE,QAAQ,EAAE,gBAAgB,CAAC,aAAa,CAAC,EAAE,KAAK,EAAE,SAAS,CAAC,CAAA;AAC3F,CAAC;AAED;;;;;;;GAOG;AACH,MAAM,CAAC,KAAK,UAAU,0BAA0B,CAC9C,aAAqB,EACrB,KAAa,EACb,IAAc;IAEd,MAAM,OAAO,GAAG,MAAM,YAAY,CAAC,KAAK,CAAC,CAAA;IACzC,OAAO,OAAO,CAAC,cAAc,CAAC,CAAA;IAE9B,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAE;QACnE,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,IAAI;QACV,OAAO,EAAE;YACP,GAAG,OAAO;YACV,GAAG,IAAI,CAAC,UAAU,EAAE;SACrB;KACF,CAAC,CAAA;IAEF,OAAO,QAAQ,CAAA;AACjB,CAAC;AAED,MAAM,gBAAgB,GAAG,CAAC,UAAkB,EAAU,EAAE;IACtD,OAAO,WAAW,UAAU,wBAAwB,CAAA;AACtD,CAAC,CAAA","sourcesContent":["import {shopifyFetch} from '../http.js'\nimport {graphqlRequest, GraphQLVariables} from '../../../private/node/api/graphql.js'\nimport {buildHeaders} from '../../../private/node/api/headers.js'\nimport FormData from 'form-data'\nimport {Response} from 'node-fetch'\n\n/**\n * Executes a GraphQL query against the Oxygen API.\n *\n * @param oxygenAddress - Oxygen address to query.\n * @param query - GraphQL query to execute.\n * @param token - Shopify access token.\n * @param variables - GraphQL variables to pass to the query.\n * @returns The response of the query of generic type <T>.\n */\nexport async function oxygenRequest<T>(\n  oxygenAddress: string,\n  query: string,\n  token: string,\n  variables?: GraphQLVariables,\n): Promise<T> {\n  return graphqlRequest(query, 'Oxygen', getOxygenAddress(oxygenAddress), token, variables)\n}\n\n/**\n * Uploads a deployment file to the Oxygen API.\n *\n * @param oxygenAddress - Oxygen address to upload to.\n * @param token - Shopify access token.\n * @param data - FormData to upload.\n * @returns The response of the query.\n */\nexport async function uploadOxygenDeploymentFile(\n  oxygenAddress: string,\n  token: string,\n  data: FormData,\n): Promise<Response> {\n  const headers = await buildHeaders(token)\n  delete headers['Content-Type']\n\n  const response = await shopifyFetch(getOxygenAddress(oxygenAddress), {\n    method: 'POST',\n    body: data,\n    headers: {\n      ...headers,\n      ...data.getHeaders(),\n    },\n  })\n\n  return response\n}\n\nconst getOxygenAddress = (oxygenHost: string): string => {\n  return `https://${oxygenHost}/api/graphql/deploy/v1`\n}\n"]}