declare class Appeandable {
    protected _s: [any, any][];
    append(name: any, value: any): void;
    delete(name: any): void;
    get(name: any): any;
    has(name: any): boolean;
    set(name: any, value: any): void;
    forEach(callbackfn: (value: any, key: any, parent: any) => void, thisArg?: any): void;
    entries(): Generator<[any, any], void, unknown>;
    keys(): Generator<any, void, unknown>;
    values(): Generator<any, void, unknown>;
    [Symbol.iterator](): Generator<[any, any], void, unknown>;
}

export { Appeandable };
